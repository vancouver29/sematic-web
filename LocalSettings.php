<?php
# This file was automatically generated by the MediaWiki 1.32.0
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
#
# See includes/DefaultSettings.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# https://www.mediawiki.org/wiki/Manual:Configuration_settings

// display errors
ini_set( 'display_errors', 1 );
ini_set( 'error_reporting', E_ALL );
$wgShowExceptionDetails = true;
$wgShowDBErrorBacktrace = true;
$wgShowSQLErrors = true;
error_reporting( -1 );

//$wgShowExceptionDetails = true;
//$wgDebugToolbar = true;
//$wgShowDebug = true;
//$wgDevelopmentWarnings = true;

$wgDebugDumpSql = true;


# Protect against web entry
if ( !defined( 'MEDIAWIKI' ) ) {
	exit;
}


## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;

$wgSitename = "KHANHWIKI";

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
## For more information on customizing the URLs
## (like /w/index.php/Page_title to /wiki/Page_title) please see:
## https://www.mediawiki.org/wiki/Manual:Short_URL
$wgScriptPath = "";

## The protocol and server name to use in fully-qualified URLs
$wgServer = "http://localhost:8888";

## The URL path to static resources (images, scripts, etc.)
$wgResourceBasePath = $wgScriptPath;

## The URL path to the logo.  Make sure you change this from the default,
## or else you'll overwrite your logo when you upgrade!
$wgLogo = "$wgResourceBasePath/resources/assets/wiki.png";

## UPO means: this is also a user preference option

$wgEnableEmail = true;
$wgEnableUserEmail = true; # UPO
$wgNoReplyAddress = $wgEmergencyContact;

$wgEmergencyContact = "apache@localhost";
$wgPasswordSender = "apache@localhost";
//$wgPasswordSender = 'SenderEmail' => '';
$wgUserEmailUseReplyTo = true;

//$wgEmergencyContact = "";
//$wgPasswordSender = "";

$wgEnotifUserTalk = false; # UPO
$wgEnotifWatchlist = false; # UPO
$wgEmailAuthentication = true;

## Database settings
$wgDBtype = "mysql";
$wgDBserver = "localhost";
$wgDBname = "my_wiki";
$wgDBuser = "wiki_database";
$wgDBpassword = "";

# MySQL specific settings
$wgDBprefix = "";

# MySQL table options to use during installation or update
$wgDBTableOptions = "ENGINE=InnoDB, DEFAULT CHARSET=binary";

## Shared memory settings
$wgMainCacheType = CACHE_NONE;
$wgMemCachedServers = [];

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads = true;
$wgUseImageMagick = true;
$wgImageMagickConvertCommand = "/usr/local/bin/convert";

# InstantCommons allows wiki to use images from https://commons.wikimedia.org
$wgUseInstantCommons = false;

# Periodically send a pingback to https://www.mediawiki.org/ with basic data
# about this MediaWiki instance. The Wikimedia Foundation shares this data
# with MediaWiki developers to help guide future development efforts.
$wgPingback = true;

## If you use ImageMagick (or any other shell command) on a
## Linux server, this will need to be set to the name of an
## available UTF-8 locale
$wgShellLocale = "en_US.UTF-8";

## Set $wgCacheDirectory to a writable directory on the web server
## to make your wiki go slightly faster. The directory should not
## be publically accessible from the web.
#$wgCacheDirectory = "$IP/cache";

# Site language code, should be one of the list in ./languages/data/Names.php
$wgLanguageCode = "en";

$wgSecretKey = "1e8db08259a171dc1adeb9fd6b0dd0927a760fb8cd9a1cb0f70d83698a768200";

# Changing this will log out all existing sessions.
$wgAuthenticationTokenVersion = "1";

# Site upgrade key. Must be set to a string (default provided) to turn on the
# web installer while LocalSettings.php is in place
$wgUpgradeKey = "ace4520261cdb60a";

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl = "";
$wgRightsText = "";
$wgRightsIcon = "";

# Path to the GNU diff3 utility. Used for conflict resolution.
$wgDiff3 = "/usr/bin/diff3";

## Default skin: you can change the default skin. Use the internal symbolic
## names, ie 'vector', 'monobook':
$wgDefaultSkin = "vector";

# Enabled skins.
# The following skins were automatically enabled:
wfLoadSkin( 'MonoBook' );
wfLoadSkin( 'Timeless' );
wfLoadSkin( 'Vector' );
//$wgMFDefaultSkinClass = 'SkinMinerva';
$wgMFDefaultSkinClass = 'SkinVector';

# End of automatically generated settings.
# Add more configuration options below.
wfLoadExtensions( ['WikiEditor'] );
$wgHiddenPrefs[] = 'usebetatoolbar';


# End of automatically generated settings.
# Add more configuration options below.

# Uers group can create pages and edit pages
// permissions for unregistered users
 $wgGroupPermissions['*']['edit'] = false;
 $wgGroupPermissions['*']['read'] = true;
 $wgGroupPermissions['*']['createpage'] = false;
 $wgGroupPermissions['*']['createpage'] = false;

// permissions for registered users
 $wgGroupPermissions['user']['edit'] = false;
 $wgGroupPermissions['user']['read'] = true;
 $wgGroupPermissions['user']['createpage'] = true;

 // permission for autoconfirmed
 $wgGroupPermissions['bot']['edit'] = true;

// persmissions for sysop
 $wgGroupPermissions['sysop']['createaccount'] = true;
 $wgGroupPermissions['sysop']['createpage'] = true;
 $wgGroupPermissions['sysop']['edit'] = true;
 $wgGroupPermissions['sysop']['delete'] = true;
 $wgGroupPermissions['sysop']['block'] = true;
 //$wgGroupPermissions['sysop']['userrights'] = true;

// permissions for superadmin
 $wgGroupPermissions['Superadmin']['createaccount'] = true;
 $wgGroupPermissions['Superadmin']['createpage'] = true;
 $wgGroupPermissions['Superadmin']['deletepage'] = true;
 $wgGroupPermissions['Superadmin']['edit'] = true;
 $wgGroupPermissions['Superadmin']['delete'] = true;
 $wgGroupPermissions['Superadmin']['block'] = true;
 $wgGroupPermissions['Superadmin']['userrights'] = true;
 $wgGroupPermissions['Superadmin']['uploads'] = true;

 // permission for Only Read Group
 $wgGroupPermissions['onlyreadgroup']['edit'] = false;
 $wgGroupPermissions['onlyreadgroup']['createpage'] = false;
 $wgGroupPermissions['onlyreadgroup']['createaccount'] = false;
 $wgGroupPermissions['onlyreadgroup']['block'] = false;
 $wgGroupPermissions['onlyreadgroup']['upload'] = false;
 $wgGroupPermissions['onlyreadgroup']['deletepage'] = false;

// permissions for Admin of each country
$wgGroupPermissions['RussiaAdmin']['read'] = true;
$wgGroupPermissions['GermanyAdmin']['read'] = true;
$wgGroupPermissions['FranceAdmin']['read'] = true;
$wgGroupPermissions['ItalyAdmin']['read'] = true;
$wgGroupPermissions['UsaAdmin']['read'] = true;

// permisson for Admean of each country
$wgGroupPermissions['UsaAdmin']['edit'] = true;
$wgGroupPermissions['UsaAdmin']['createpage'] = true;
$wgGroupPermissions['UsaAdmin']['block'] = true;
$wgGroupPermissions['UsaAdmin']['upload'] = true;
$wgGroupPermissions['UsaAdmin']['createaccount'] = true;

$wgGroupPermissions['GermanyAdmin']['edit'] = true;
$wgGroupPermissions['GermanyAdmin']['createpage'] = true;
$wgGroupPermissions['GermanyAdmin']['block'] = true;
$wgGroupPermissions['GermanyAdmin']['upload'] = true;
$wgGroupPermissions['GermanyAdmin']['createaccount'] = true;

$wgGroupPermissions['RussiaAdmin']['edit'] = true;
$wgGroupPermissions['RussiaAdmin']['createpage'] = true;
$wgGroupPermissions['RussiaAdmin']['block'] = true;
$wgGroupPermissions['RussiaAdmin']['upload'] = true;
$wgGroupPermissions['RussiaAdmin']['createaccount'] = true;

// permissions for bureaucrat
 $wgGroupPermissions['bureaucrat']['userrights'] = false;




// protect private page
 require_once "$IP/extensions/PrivatePageProtection/PrivatePageProtection.php";
 //$wgAccessControlPanelAllowedGroup = 'ControlGroup';
 //$wgGroupPermissions[$wgAccessControlPanelAllowedGroup]['read']   = true;
 //$wgGroupPermissions[$wgAccessControlPanelAllowedGroup]['edit']   = true;
//require_once "extensions/AccessControl/AccessControl.php";

require_once( "$IP/extensions/Lockdown/Lockdown.php" );
//wfLoadExtension( 'Lockdown' );

$wgSpecialPageLockdown['Export'] = array('user');
$wgNamespacePermissionLockdown[NS_PROJECT]['edit'] = array('user');
$wgSpecialPageLockdown['NS_FILE'] = array('user');

$wgSpecialPageLockdown['NS_MEDIA'] = array('user', 'sysop');
//$wgSpecialPageLockdown['NS_MEDIA'] = array('sysop);

// band sysop to upload file into server
//$wgNamespaceProtection[NS_MEDIA] = array( 'sysop' );
//$wgNamespaceProtection[NS_FILE] = array( 'sysop' );



define("NS_GERMANY", 3000);
define("NS_GERMANY_TALK", 3001);
define("NS_RUSSIA", 3002);
define("NS_RUSSIA_TALK", 3003);
define("NS_USA", 3004);
define("NS_USA_TALK", 3005);
define("NS_FOOD_SAFETY_ALMANAC", 3006);
define("NS_FOOD_SAFETY_ALMANAC_TALK", 3007);

// define additional namespaces
$wgExtraNamespaces =
    array(NS_GERMANY => "Germany",
          NS_GERMANY_TALK => "Germany_talk",
					NS_RUSSIA => "Russia",
					NS_RUSSIA_TALK => "Russia_talk",
					NS_USA => "Usa",
					NS_USA_TALK => "Usa_talk",
					NS_FOOD_SAFETY_ALMANAC => "Food Safety Almanac",
					NS_FOOD_SAFETY_ALMANAC_TALK => "Food Safety Almanac_talk"
    );


// create groups
$wgGroupPermissions['RussiaGroup']['read'] = true;
$wgGroupPermissions['GermanyGroup']['read'] = true;
$wgGroupPermissions['UsaGroup']['read']    = true;
$wgGroupPermissions['Food Safety Almanac']['read']    = true;
$wgGroupPermissions['onlyreadgroup']['read'] = true;


$wgGroupPermissions['Superadmin']['read']    = true;
$wgGroupPermissions['Superadmin']['755']    = true;


$wgGroupPermissions['user']['upload'] = false;
$wgGroupPermissions['Superadmin']['upload'] = true;
//The right to replace existing files is handled by an extra permission
$wgGroupPermissions['Superadmin']['reupload'] = true;

// give permissions to each group due to the appropriate name subpackage
// eg. Members of GermanyGroup are allowed to create and edit page in
// grant only members of the GemranyGroup permisson access to the Germany namespace.
$wgNamespacePermissionLockdown[NS_GERMANY]['createpage'] = [ 'GermanyGroup', 'GermanyAdmin' ];
$wgNamespacePermissionLockdown[NS_GERMANY]['edit'] = array('GermanyGroup','GermanyAdmin' ,'Superadmin');
$wgNamespacePermissionLockdown[NS_TALK]['read'] = array('sysop', 'Superadmin');

$wgNamespacePermissionLockdown[NS_RUSSIA]['createpage'] = array('RussiaGroup', 'RussiaAdmin');
$wgNamespacePermissionLockdown[NS_RUSSIA]['edit'] = array('RussiaGroup', 'GermanyAdmin','Superadmin');


$wgNamespacePermissionLockdown[NS_USA]['createpage'] = array('UsaGroup', 'UsaAdmin');
$wgNamespacePermissionLockdown[NS_USA]['edit'] = array('UsaGroup','UsaAdmin','Superadmin');

$wgNamespacePermissionLockdown[NS_FOOD_SAFETY_ALMANAC]['createpage'] = array('Food Safety Almanac');
$wgNamespacePermissionLockdown[NS_FOOD_SAFETY_ALMANAC]['edit'] = array('Food Safety Almanac', 'Superadmin');


//$wgAddGroups['RussiaGroup'] = true;
//$wgAddGroups['RussiaGroup'] = array( 'bot' , 'bureaucrat', 'RussiaGroup');
//$wgRemoveGroups['RussiaGroup'] = true;
//$wgRemoveGroups['RusssiaGroup'] = array( 'bot' , 'bureaucrat', 'RussiaGroup');

//$wgAddGroups['UsaGroup'] = true;
//$wgAddGroups['UsaGroup'] = array( 'bot' , 'bureaucrat', 'UsaGroup');
//$wgRemoveGroups['UsaGroup'] = true;
//$wgRemoveGroups['UsaGroup'] = array( 'bot' , 'bureaucrat', 'UsaGroup');

// Add and Remove of Country groups
$wgAddGroups['GermanyGroup'][] = 'GermanyGroup';
$wgRemoveGroups['GermanyGroup'][] = 'bot';
$wgRemoveGroups['GermanyGroup'][] = 'GermanyGroup';

$wgAddGroups['RussiaGroup'][] = 'RussiaGroup';
$wgRemoveGroups['RussiaGroup'][] = 'bot';
$wgRemoveGroups['RussiaGroup'][] = 'RussiaGroup';

$wgAddGroups['UsaGroup'][] = 'UsaGroup';
$wgRemoveGroups['UsaGroup'][] = 'bot';
$wgRemoveGroups['UsaGroup'][] = 'UsaGroup';


// Add and Remove of Admin of their Country groups
$wgAddGroups['GermanyAdmin'][] = 'bot';
$wgAddGroups['GermanyAdmin'][] = 'GermanyGroup';
$wgRemoveGroups['GermanyAdmin'][] = 'bot';
$wgRemoveGroups['GermanyAdmin'][] = 'GermanyGroup';

$wgAddGroups['UsaAdmin'][] = 'bot';
$wgAddGroups['UsaAdmin'][] = 'UsaGroup';
$wgRemoveGroups['UsaAdmin'][] = 'bot';
$wgRemoveGroups['UsaAdmin'][] = 'UsaGroup';

$wgAddGroups['RussiaAdmin'][] = 'bot';
$wgAddGroups['RussiaAdmin'][] = 'RussiaGroup';
$wgRemoveGroups['RussiaAdmin'][] = 'bot';
$wgRemoveGroups['RussiaAdmin'][] = 'RussiaGroup';



//$wgAddGroups['bureaucrat'] = false;
//$wgRemoveGroups['bureaucrat'] = false;
//wfLoadExtension( 'PdfBook' );
wfLoadExtension( 'Mpdf' );
$wgMpdfTab = true;

wfLoadExtension( 'Cite' );
wfLoadExtension( 'Gadgets' );
wfLoadExtension( 'ImageMap' );
wfLoadExtension( 'InputBox' );
wfLoadExtension( 'Nuke' );
wfLoadExtension( 'ParserFunctions' );
wfLoadExtension( 'Poem' );
wfLoadExtension( 'SyntaxHighlight_GeSHi' );

//Tooltips
require_once "$IP/extensions/SimpleTooltip/SimpleTooltip.php";

//Jsonconfig
wfLoadExtension( 'JsonConfig' );

// Graph
wfLoadExtension( 'Graph' );

// $wgShowExceptionDetails = true;
//
// $wgDevelopmentWarnings = true; error_reporting( -1 ); ini_set( 'display_errors', 1); error_reporting(E_ALL);

// PdfBook
wfLoadExtension( 'PdfBook' );
$wgPdfBookTab = True;

// DocBookExport
wfLoadExtension( 'DocBookExport' );
// Figures is important for DocBookExport
wfLoadExtension( 'Figures' );
$wgDocBookExportPandocPath = "http://localhost:8888/extensions/html_to_docbook/wikiHtmlToDocbookConvertor.php";
//Collection
//wfLoadExtension('Collection');

// Pageform
wfLoadExtension( 'PageForms' );

// CLDR
wfLoadExtension( 'cldr' );

// Babel
wfLoadExtension( 'Babel' );

// CleanChanges
wfLoadExtension( 'CleanChanges' );
$wgCCTrailerFilter = true;
$wgCCUserFilter = false;
$wgDefaultUserOptions['usenewrc'] = 1;

//Localization Update
wfLoadExtension( 'LocalisationUpdate' );
$wgLocalisationUpdateDirectory = "$IP/cache";

// Translate

//require_once "$IP/extensions/Translate/Translate.php";
$wgGroupPermissions['user']['translate'] = true;
$wgGroupPermissions['user']['translate-messagereview'] = true;
$wgGroupPermissions['user']['translate-groupreview'] = true;
$wgGroupPermissions['user']['translate-import'] = true;
$wgGroupPermissions['sysop']['pagetranslation'] = true;
$wgGroupPermissions['sysop']['translate-manage'] = true;
$wgTranslateDocumentationLanguageCode = 'qqq';
$wgExtraLanguageNames['qqq'] = 'Message documentation';
# No linguistic content. Used for documenting messages

// electroPdf
wfLoadExtension( 'ElectronPdfService' );
$wgElectronPdfServiceRESTbaseURL = '/api/rest_v1/page/pdf/';

// pdfembed
wfLoadExtension( 'PDFEmbed' );
// Default width for the PDF object container.
$wgPdfEmbed['width'] = 800;
// Default height for the PDF object container.
$wgPdfEmbed['height'] = 1090;

// Kartographer
wfLoadExtension( 'Kartographer' );
//Enables Wikivoyage mode.
$wgKartographerWikivoyageMode = true;
// Allows Kartographer to extract CSS style
// to be used by the link from the GeoJSON.
$wgKartographerUseMarkerStyle = true;
// Defines if the map will be a static image.
$wgKartographerStaticMapframe = true;
// Enables the tag <mapframe> to be used and create static or interactive maps.
$wgKartographerEnableMapFrame = true;

// GraphViz
wfLoadExtension( 'GraphViz' );

// UniversalLanguageSelector
wfLoadExtension( 'UniversalLanguageSelector' );

// User contact Link
//require_once( "$IP/extensions/UserContactLinks/UserSignature.php" );

// Contact page
wfLoadExtension( 'ContactPage' );
$wgContactConfig['default'] = array(
	'RecipientUser' => 'vancouver', // Must be the name of a valid account which also has a verified e-mail-address added to it.
	'SenderName' => 'Contact Form on ' . $wgSitename, // "Contact Form on" needs to be translated
	'SenderEmail' => '', // Defaults to $wgPasswordSender, may be changed as required
	'RequireDetails' => true, // Either "true" or "false" as required
	'IncludeIP' => true, // Either "true" or "false" as required
	'MustBeLoggedIn' => true, // Check if the user is logged in before rendering the form
	'AdditionalFields' => array(
		'Text' => array(
			'label-message' => 'emailmessage',
			'type' => 'textarea',
			'rows' => 20,
			'required' => true,  // Either "true" or "false" as required
		),
	),
        // Added in MW 1.26
	'DisplayFormat' => 'table',  // See HTMLForm documentation for available values.
	'RLModules' => array(),  // Resource loader modules to add to the form display page.
	'RLStyleModules' => array(),  // Resource loader CSS modules to add to the form display page.
);
$wgUserEmailUseReplyTo = true;

$wgCaptchaTriggers['contactpage'] = true;

// Confirm edit
//wfLoadExtension( ['ConfirmEdit', 'ConfirmEdit/QuestyCaptcha'] );

// Contact us
require_once "$IP/extensions/ContactUs/ContactUs.php";
$wgContactUs_Recipients['Vancouver'] = array('user', 'RussiaGroup', 'GermanGroup');
$wgContactUs_DisableGroups = True;
//$wgContactUs_Recipients['vancouver'] = true;

$wgSMTP = [
 'host' => 'ssl://smtp.gmail.com',
 'IDHost' => 'gmail.com',
 'localhost' => 'KHANHWIKI.org',
 'port' => 465,
 'username' => '',
 'password' => '',
 'auth' => true
];

// MobileFrontend
wfLoadExtension( 'MobileFrontend' );
$wgMFAutodetectMobileView = true;
wfLoadSkin( 'MinervaNeue' );

//Email form
require_once( "$IP/extensions/EmailForm/EmailForm.php" );

//Form Mailer
require_once( "$IP/extensions/FormMailer/FormMailer.php" );
$wgFormMailerRecipients = ['Vancouver'];

// Confrim Account
//require_once( "$IP/extensions/ConfirmAccount/ConfirmAccount.php" );
